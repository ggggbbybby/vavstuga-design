<%= form_with(model: pattern, local: true) do |form| %>
  <% if pattern.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(pattern.errors.count, "error") %> prohibited this pattern from being saved:</h2>

      <ul>
      <% pattern.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row">
    <div class="col-md-6">
      <% if can?(:publish, Pattern) %>
        <%= form.label :public do %>
          Public?
          <%= form.check_box :public %>
        <% end %>
      <% end %>

      <div class="form-group">
        <%= form.label :name %>
        <%= form.text_field :name, class: "form-control" %>
      </div>

      <% if can?(:publish, Pattern) %>
        <label for="pattern[slug]">Custom URL</label>
        <div class="input-group form-group">
          <div class="input-group-prepend">
            <div class="input-group-text">vavstuga.design/patterns/</div>
          </div>
          <%= form.text_field :slug, class: "form-control" %>
        </div>

        <b> Breadcrumbs </b>
        <div class="form-group">
          <label for="pattern[vavstuga_category_name]">Store Category Name</label>
          <%= form.text_field :vavstuga_category_name, class: "form-control" %>
          <label for="pattern[vavstuga_category_url]">Store Category Page</label>
          <%= form.text_field :vavstuga_category_url, class: "form-control" %>

          <label for="pattern[vavstuga_product_name]">Store Product Name</label>
          <%= form.text_field :vavstuga_product_name, class: "form-control" %>        
          <label for="pattern[vavstuga_product_url]">Store Product Page</label>
          <%= form.text_field :vavstuga_product_url, class: "form-control" %>
        </div>
      <% end %>

      <div class="form-group">
        <%= form.label :yarn %>
        <%= form.select :yarn_id, Yarn.all.map {|y| [ y.display_name, y.id ] }, {}, { id: :pattern_yarn_id, class: "form-control" } %>
      </div>
      <p id="yarn-change" style="display: none;">
        please save and re-open this page after changing the yarn type
      </p>
    </div>
  </div>


  <% unless pattern.new_record? %>
    <div class="row">
      <div id="colorPalette">
        <h4>Color Palette</h4>
        <div id="paletteSwatches">
        </div>
        <%= select_tag "color-palette",
                       options_for_select(@pattern.yarn.color_options, @pattern.default_colors.values),
                       multiple: true, class: :multiselect, id: "colorPalette"
        %>
      </div>
    </div>

    <hr />

    <div id="stripes">
      <div class="row">
        <div class="col-md-3">Color</div>
        <div class="col-md-2"># of Threads</div>
      </div>
      <% @pattern.stripes = [['A', 1]] if @pattern.stripes.empty? %>
      <% @pattern.stripes.each_with_index do |(color_key, width), index| %>
        <% selected_color = pattern.default_colors[color_key] %>
        <div class="row mirrorable">
          <div class="col-md-3">
            <%= form.select "stripes][][color", @pattern.yarn.colors.map { |c| [" #{c['name'].titlecase} (##{c['code']})", c['code']] }, { selected: selected_color }, { class: "form-control select-from-palette" } %>
          </div>
          <div class="col-md-2">
            <%= form.text_field "stripes][][width", value: width, class: "form-control", type: "number" %>
          </div>
          <div class="col-md-2">
            <button type="button" class="clone-stripe btn btn-outline-primary btn-sm" title="Clone this Stripe">Clone</button>
            <button type="button" class="remove-stripe btn btn-outline-secondary btn-sm" title="Remove this Stripe">Remove</button>
          </div>
        </div>
      <% end %>
    </div>
    <button type="button" id="mirror-existing" class="btn btn-warning">Mirror</button>
  <% end %>

  <hr/>

  <div class="actions">
    <%= form.submit "Save Pattern", class: "btn btn-primary" %>
  </div>
<% end %>

<script type="text/javascript">
  $(document).ready ( function(){
    var clone = function($row) {
      var $clone = $row.clone();
      $clone.find('select').val($row.find('select').val());
      return $clone
    };
    $('#mirror-existing').click(function(){
      if(window.confirm("Are you sure you want to mirror the existing pattern? This might take a few seconds. Be sure to save afterwards!")) {
        var stripes = $('#stripes .row.mirrorable').get().reverse();
        $.each(stripes, function(idx, stripe) {
          clone($(stripe)).appendTo('#stripes');
        });
      }
    });

    $('body').on('click', '.remove-stripe', function(e){
      var $target = $(e.target);
      $target.closest('.row').remove();
    });

    $('body').on('click', '.clone-stripe', function(e){
      var $row = $(e.target).closest('.row');
      $row.after(clone($row));
    });


    $('select#pattern_yarn_id').on('change', function(){
      $('#yarn-change').show();
      $('#stripes').hide();
      $('#colorPalette').hide();
    });

    $('select.multiselect').multiselect({ maxHeight: 300, numberDisplayed: 2 });

    var updatePalette = function() {
      $('#paletteSwatches .swatch').remove();
      $('#colorPalette').find('option:selected').each(function(a, item){
        var swatch = $('<div class="swatch"></div>');
        swatch.attr('data-color', item.value);
        swatch.css('background-image', bg(item.value));
        swatch.attr('title', colorName(item.value));
        $("#paletteSwatches").append(swatch);
      });
    };

    var updateOptions = function() {
      $('.select-from-palette').each(function(idx, select){
        var value = select.value;
        select.options.length = 0;
        select.options[0] = new Option();
        $('#colorPalette').find('option:selected').each(function(idx, option) {
          select.options[idx+1] = new Option(option.innerHTML, option.value, option.value === value, option.value === value);
        });
      });
    };
    $('#colorPalette').on('change', updatePalette).change();
    $('#colorPalette').on('change', updateOptions).change();
  });
</script>


